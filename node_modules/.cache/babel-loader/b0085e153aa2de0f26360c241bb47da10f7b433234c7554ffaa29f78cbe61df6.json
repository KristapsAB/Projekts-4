{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\noliktava\\\\src\\\\AllEventsDetails.jsx\",\n  _s = $RefreshSig$();\n// AllEventsDetails.jsx\nimport React, { useState, useEffect } from 'react';\nimport EventDetails from './EventDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllEventsDetails = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(`http://localhost/api/getAllEvents.php`);\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          throw new Error('Error fetching events.');\n        }\n        const data = await response.json();\n        setEvents(data.events);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: events.map(event => /*#__PURE__*/_jsxDEV(EventDetails, {\n      eventId: event.id\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AllEventsDetails, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = AllEventsDetails;\nexport default AllEventsDetails;\nvar _c;\n$RefreshReg$(_c, \"AllEventsDetails\");","map":{"version":3,"names":["React","useState","useEffect","EventDetails","jsxDEV","_jsxDEV","AllEventsDetails","_s","events","setEvents","fetchEvents","response","fetch","ok","console","error","status","Error","data","json","children","map","event","eventId","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/noliktava/src/AllEventsDetails.jsx"],"sourcesContent":["// AllEventsDetails.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport EventDetails from './EventDetails';\r\n\r\nconst AllEventsDetails = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost/api/getAllEvents.php`);\r\n        if (!response.ok) {\r\n          console.error(`HTTP error! Status: ${response.status}`);\r\n          throw new Error('Error fetching events.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEvents(data.events);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {events.map((event) => (\r\n        <EventDetails key={event.id} eventId={event.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllEventsDetails;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsC,CAAC;QACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChBC,OAAO,CAACC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;UACvD,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,EACGZ,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA,CAACF,YAAY;MAAgBoB,OAAO,EAAED,KAAK,CAACE;IAAG,GAA5BF,KAAK,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7BID,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA+BtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}