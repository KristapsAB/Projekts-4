{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/OrderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from './UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport Nav from './Nav';\nimport './style/OrderPage.css';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersPage = () => {\n  _s();\n  const {\n    isAuthenticated,\n    userData\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [cart, setCartState] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Check if token is available in local storage\n        const token = localStorage.getItem('token');\n        console.log('Token:', token);\n        if (!token) {\n          console.error('Token not found in local storage. Redirecting to login.');\n          navigate('/login');\n          return;\n        }\n\n        // Check if isAuthenticated and userData are available\n        if (!isAuthenticated || !userData || !userData.userId) {\n          console.error('Authentication information is missing. Redirecting to login.');\n          navigate('/login');\n          return;\n        }\n        console.log('Authenticated User:', userData);\n\n        // Fetch user's cart items from the backend\n        const response = await fetch(`http://localhost:8888/api/getCartItems.php?userId=${userData.userId}`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          throw new Error('Error fetching cart items.');\n        }\n        const data = await response.json();\n\n        // Update cart state with fetched data\n        setCartState(data.cartItems);\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n        setLoading(false); // Set loading to false in case of an error\n      }\n    };\n    fetchData();\n  }, [navigate, isAuthenticated, userData]);\n  const handlePurchase = async cartItemId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8888/api/updateCartItemStatus.php?cartItemId=${cartItemId}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        throw new Error('Error updating cart item status.');\n      }\n      const updatedCart = cart.map(item => item.id === cartItemId ? {\n        ...item,\n        status: 'purchased'\n      } : item);\n\n      // Assuming you have access to the purchase date and random code\n      const purchaseDate = new Date().toLocaleString(); // Modify this based on your backend data\n      const randomCode = generateRandomCode(); // Implement a function to generate a random code\n\n      generatePDF(updatedCart.find(item => item.id === cartItemId), purchaseDate, randomCode);\n      setCartState(updatedCart);\n    } catch (error) {\n      console.error('Error updating cart item status:', error);\n    }\n  };\n  const generateRandomCode = () => {\n    // Implement a function to generate a random code (e.g., alphanumeric code)\n    // Example implementation:\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const length = 8;\n    let randomCode = '';\n    for (let i = 0; i < length; i++) {\n      randomCode += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return randomCode;\n  };\n  const generatePDF = (eventData, purchaseDate, randomCode) => {\n    const pdf = new jsPDF();\n    pdf.text(`Event ID: ${eventData.id}`, 20, 20);\n    pdf.text(`Purchase Date: ${purchaseDate}`, 20, 30);\n    pdf.text(`Random Code: ${randomCode}`, 20, 40);\n\n    // Save the PDF with a unique name, you can customize this\n    pdf.save(`ticket_${eventData.id}_${purchaseDate}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-page-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders-container\",\n        children: cart.map(item => {\n          console.log('Item:', item); // Log the entire item object\n          console.log('Item Status:', item.status);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Event Name: \", item.event_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", item.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: $\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tickets Amount: \", item.tickets_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), item.status && item.status !== 'purchased' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"purchase-button\",\n              onClick: () => handlePurchase(item.id),\n              children: \"Purchase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersPage, \"XJwXdhDUBqhJecAGWdsP4EV5g3s=\", false, function () {\n  return [useNavigate];\n});\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","useNavigate","Nav","jsPDF","jsxDEV","_jsxDEV","OrdersPage","_s","isAuthenticated","userData","navigate","cart","setCartState","loading","setLoading","fetchData","token","localStorage","getItem","console","log","error","userId","response","fetch","method","headers","Authorization","ok","status","Error","data","json","cartItems","handlePurchase","cartItemId","updatedCart","map","item","id","purchaseDate","Date","toLocaleString","randomCode","generateRandomCode","generatePDF","find","characters","length","i","charAt","Math","floor","random","eventData","pdf","text","save","children","fileName","_jsxFileName","lineNumber","columnNumber","className","event_name","location","price","tickets_amount","onClick","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/OrderPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from './UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport Nav from './Nav';\nimport './style/OrderPage.css';\nimport jsPDF from 'jspdf';\nconst OrdersPage = () => {\n  const { isAuthenticated, userData } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [cart, setCartState] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Check if token is available in local storage\n        const token = localStorage.getItem('token');\n        console.log('Token:', token);\n\n        if (!token) {\n          console.error('Token not found in local storage. Redirecting to login.');\n          navigate('/login');\n          return;\n        }\n\n        // Check if isAuthenticated and userData are available\n        if (!isAuthenticated || !userData || !userData.userId) {\n          console.error('Authentication information is missing. Redirecting to login.');\n          navigate('/login');\n          return;\n        }\n\n        console.log('Authenticated User:', userData);\n\n        // Fetch user's cart items from the backend\n        const response = await fetch(`http://localhost:8888/api/getCartItems.php?userId=${userData.userId}`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          throw new Error('Error fetching cart items.');\n        }\n\n        const data = await response.json();\n\n        // Update cart state with fetched data\n        setCartState(data.cartItems);\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n        setLoading(false); // Set loading to false in case of an error\n      }\n    };\n\n    fetchData();\n  }, [navigate, isAuthenticated, userData]);\n\n  const handlePurchase = async (cartItemId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8888/api/updateCartItemStatus.php?cartItemId=${cartItemId}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        throw new Error('Error updating cart item status.');\n      }\n  \n      const updatedCart = cart.map((item) =>\n        item.id === cartItemId ? { ...item, status: 'purchased' } : item\n      );\n  \n      // Assuming you have access to the purchase date and random code\n      const purchaseDate = new Date().toLocaleString(); // Modify this based on your backend data\n      const randomCode = generateRandomCode(); // Implement a function to generate a random code\n  \n      generatePDF(updatedCart.find((item) => item.id === cartItemId), purchaseDate, randomCode);\n  \n      setCartState(updatedCart);\n    } catch (error) {\n      console.error('Error updating cart item status:', error);\n    }\n  };\n  \n  const generateRandomCode = () => {\n    // Implement a function to generate a random code (e.g., alphanumeric code)\n    // Example implementation:\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const length = 8;\n    let randomCode = '';\n  \n    for (let i = 0; i < length; i++) {\n      randomCode += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n  \n    return randomCode;\n  };\n  \n  const generatePDF = (eventData, purchaseDate, randomCode) => {\n    const pdf = new jsPDF();\n    pdf.text(`Event ID: ${eventData.id}`, 20, 20);\n    pdf.text(`Purchase Date: ${purchaseDate}`, 20, 30);\n    pdf.text(`Random Code: ${randomCode}`, 20, 40);\n  \n    // Save the PDF with a unique name, you can customize this\n    pdf.save(`ticket_${eventData.id}_${purchaseDate}.pdf`);\n  };\n  \n  return (\n    <div>\n    <Nav />\n    <div className=\"orders-page-main-container\">\n      <h2>Your Orders</h2>\n      <div className=\"orders-container\">\n        {cart.map((item) => {\n          console.log('Item:', item); // Log the entire item object\n          console.log('Item Status:', item.status);\n          return (\n            <div key={item.id} className=\"order-item\">\n              <p>Event Name: {item.event_name}</p>\n              <p>Location: {item.location}</p>\n              <p>Price: ${item.price}</p>\n              <p>Tickets Amount: {item.tickets_amount}</p>\n              {item.status && item.status !== 'purchased' && (\n                <button className=\"purchase-button\" onClick={() => handlePurchase(item.id)}>\n                  Purchase\n                </button>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default OrdersPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}