{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState({\n    userId: null,\n    username: null,\n    role: null\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    try {\n      // Check local storage for user data\n      const storedUserId = localStorage.getItem('userId');\n      const storedUsername = localStorage.getItem('username');\n      const storedUserRole = localStorage.getItem('role');\n\n      // Update context based on local storage\n      if (storedUserId && storedUsername && storedUserRole) {\n        setUserData({\n          userId: storedUserId,\n          username: storedUsername,\n          role: storedUserRole\n        });\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Error accessing local storage:', error);\n      // Handle the error (e.g., reset local storage, show an error message)\n    } finally {\n      // Set loading to false once the context is updated or an error occurs\n      setLoading(false);\n    }\n  }, []);\n  const setAuthStatus = status => {\n    setIsAuthenticated(status);\n  };\n\n  // Include setUserData and logout in the context value\n  const contextValue = {\n    isAuthenticated,\n    setAuthStatus,\n    userData,\n    setUserData,\n    logout: () => {\n      setIsAuthenticated(false);\n      setUserData({\n        userId: null,\n        username: null,\n        role: null\n      });\n      localStorage.removeItem('userId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"xTRspU97BZXHT81KHMlNSJ4I8R8=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","isAuthenticated","setIsAuthenticated","userData","setUserData","userId","username","role","loading","setLoading","storedUserId","localStorage","getItem","storedUsername","storedUserRole","error","console","setAuthStatus","status","contextValue","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState({\n    userId: null,\n    username: null,\n    role: null,\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      // Check local storage for user data\n      const storedUserId = localStorage.getItem('userId');\n      const storedUsername = localStorage.getItem('username');\n      const storedUserRole = localStorage.getItem('role');\n\n      // Update context based on local storage\n      if (storedUserId && storedUsername && storedUserRole) {\n        setUserData({\n          userId: storedUserId,\n          username: storedUsername,\n          role: storedUserRole,\n        });\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Error accessing local storage:', error);\n      // Handle the error (e.g., reset local storage, show an error message)\n    } finally {\n      // Set loading to false once the context is updated or an error occurs\n      setLoading(false);\n    }\n  }, []);\n\n  const setAuthStatus = (status) => {\n    setIsAuthenticated(status);\n  };\n\n  // Include setUserData and logout in the context value\n  const contextValue = {\n    isAuthenticated,\n    setAuthStatus,\n    userData,\n    setUserData,\n    logout: () => {\n      setIsAuthenticated(false);\n      setUserData({\n        userId: null,\n        username: null,\n        role: null,\n      });\n      localStorage.removeItem('userId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n    },\n  };\n\n  return (\n    <UserContext.Provider value={contextValue}>\n      {!loading ? children : <p>Loading...</p>}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAI;MACF;MACA,MAAMgB,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACnD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACvD,MAAME,cAAc,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;MAEnD;MACA,IAAIF,YAAY,IAAIG,cAAc,IAAIC,cAAc,EAAE;QACpDV,WAAW,CAAC;UACVC,MAAM,EAAEK,YAAY;UACpBJ,QAAQ,EAAEO,cAAc;UACxBN,IAAI,EAAEO;QACR,CAAC,CAAC;QACFZ,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC,SAAS;MACR;MACAN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAIC,MAAM,IAAK;IAChChB,kBAAkB,CAACgB,MAAM,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACnBlB,eAAe;IACfgB,aAAa;IACbd,QAAQ;IACRC,WAAW;IACXgB,MAAM,EAAEA,CAAA,KAAM;MACZlB,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC;QACVC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,IAAI;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;MACFI,YAAY,CAACU,UAAU,CAAC,QAAQ,CAAC;MACjCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;MACnCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAEJ,YAAa;IAAApB,QAAA,EACvC,CAACS,OAAO,GAAGT,QAAQ,gBAAGH,OAAA;MAAAG,QAAA,EAAG;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA9DIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAgElB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}