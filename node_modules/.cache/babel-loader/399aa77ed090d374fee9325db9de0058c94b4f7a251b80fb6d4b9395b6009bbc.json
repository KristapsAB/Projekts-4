{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\noliktava\\\\src\\\\EventDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventReviewsPage = () => {\n  _s();\n  const [eventsWithRatings, setEventsWithRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchEventsWithRatings = async () => {\n      try {\n        const response = await fetch('http://localhost/path/to/getRatedEvents.php');\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          throw new Error('Error fetching rated events.');\n        }\n        const data = await response.json();\n        if (Array.isArray(data) && data.length > 0) {\n          setEventsWithRatings(data);\n        } else {\n          console.log('No events with ratings found.');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching rated events:', error);\n        setLoading(false);\n      }\n    };\n    fetchEventsWithRatings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading events with ratings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: eventsWithRatings.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: eventsWithRatings.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.event_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", Number(event.average_rating).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: event.image_link,\n            alt: event.event_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, event.event_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events with ratings found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(EventReviewsPage, \"NJkYDCerjhZTSTMzZKZDDNtCfQI=\");\n_c = EventReviewsPage;\nexport default EventReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"EventReviewsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventReviewsPage","_s","eventsWithRatings","setEventsWithRatings","loading","setLoading","fetchEventsWithRatings","response","fetch","ok","console","error","status","Error","data","json","Array","isArray","length","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","event_name","Number","average_rating","toFixed","src","image_link","alt","event_id","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/noliktava/src/EventDetailsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EventReviewsPage = () => {\r\n  const [eventsWithRatings, setEventsWithRatings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchEventsWithRatings = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost/path/to/getRatedEvents.php');\r\n\r\n        if (!response.ok) {\r\n          console.error(`HTTP error! Status: ${response.status}`);\r\n          throw new Error('Error fetching rated events.');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setEventsWithRatings(data);\r\n        } else {\r\n          console.log('No events with ratings found.');\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching rated events:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEventsWithRatings();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading events with ratings...</p>\r\n      ) : (\r\n        <div>\r\n          {eventsWithRatings.length > 0 ? (\r\n            <ul>\r\n              {eventsWithRatings.map((event) => (\r\n                <li key={event.event_id}>\r\n                  <h3>{event.event_name}</h3>\r\n                  <p>Rating: {Number(event.average_rating).toFixed(2)}</p>\r\n                  <img src={event.image_link} alt={event.event_name} />\r\n                  {/* Add other event details as needed */}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No events with ratings found.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventReviewsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;QAE3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChBC,OAAO,CAACC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;UACvD,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAElC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UAC1Cf,oBAAoB,CAACW,IAAI,CAAC;QAC5B,CAAC,MAAM;UACLJ,OAAO,CAACS,GAAG,CAAC,+BAA+B,CAAC;QAC9C;QAEAd,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAqB,QAAA,EACGhB,OAAO,gBACNL,OAAA;MAAAqB,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErCzB,OAAA;MAAAqB,QAAA,EACGlB,iBAAiB,CAACgB,MAAM,GAAG,CAAC,gBAC3BnB,OAAA;QAAAqB,QAAA,EACGlB,iBAAiB,CAACuB,GAAG,CAAEC,KAAK,iBAC3B3B,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAKM,KAAK,CAACC;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BzB,OAAA;YAAAqB,QAAA,GAAG,UAAQ,EAACQ,MAAM,CAACF,KAAK,CAACG,cAAc,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxDzB,OAAA;YAAKgC,GAAG,EAAEL,KAAK,CAACM,UAAW;YAACC,GAAG,EAAEP,KAAK,CAACC;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAH9CE,KAAK,CAACQ,QAAQ;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKnB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELzB,OAAA;QAAAqB,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxDID,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AA0DtB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}