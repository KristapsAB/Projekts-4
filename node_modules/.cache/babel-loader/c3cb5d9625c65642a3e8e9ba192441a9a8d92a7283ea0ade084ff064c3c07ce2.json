{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js\",\n  _s = $RefreshSig$();\n// UserContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate(); // Import useNavigate\n\n  const [authStatus, setAuthStatus] = useState(false);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('token') !== null;\n    setAuthStatus(isAuthenticated);\n    if (isAuthenticated) {\n      // Fetch user data from the server and update context\n      // For now, I'll just set a sample user\n      // Replace this with your actual logic to fetch user data\n      setUserData({\n        userId: 1,\n        username: 'admin',\n        role: 'Admin'\n      });\n    } else {\n      // If not authenticated, navigate to login page\n      navigate('/login');\n    }\n  }, [navigate]); // Add navigate to the dependencies array\n\n  console.log('Auth Status:', authStatus);\n  console.log('User Data:', userData);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      authStatus,\n      setAuthStatus,\n      userData,\n      setUserData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"EDmHVOLf3x1DtzD8JuBkwAGicr0=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","navigate","authStatus","setAuthStatus","userData","setUserData","isAuthenticated","localStorage","getItem","userId","username","role","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js"],"sourcesContent":["// UserContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const navigate = useNavigate(); // Import useNavigate\n\n  const [authStatus, setAuthStatus] = useState(false);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('token') !== null;\n\n    setAuthStatus(isAuthenticated);\n\n    if (isAuthenticated) {\n      // Fetch user data from the server and update context\n      // For now, I'll just set a sample user\n      // Replace this with your actual logic to fetch user data\n      setUserData({\n        userId: 1,\n        username: 'admin',\n        role: 'Admin',\n      });\n    } else {\n      // If not authenticated, navigate to login page\n      navigate('/login');\n    }\n  }, [navigate]); // Add navigate to the dependencies array\n\n  console.log('Auth Status:', authStatus);\n  console.log('User Data:', userData);\n\n  return (\n    <UserContext.Provider value={{ authStatus, setAuthStatus, userData, setUserData }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;IAE9DL,aAAa,CAACG,eAAe,CAAC;IAE9B,IAAIA,eAAe,EAAE;MACnB;MACA;MACA;MACAD,WAAW,CAAC;QACVI,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,OAAO;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAV,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhBW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,UAAU,CAAC;EACvCU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAET,QAAQ,CAAC;EAEnC,oBACER,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,UAAU;MAAEC,aAAa;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAAN,QAAA,EAC/EA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAlCIF,YAAY;EAAA,QACCJ,WAAW;AAAA;AAAA0B,EAAA,GADxBtB,YAAY;AAoClB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}