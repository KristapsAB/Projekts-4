{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\noliktava\\\\src\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, redirect, useHistory } from 'react-router-dom'; // Import useHistory for redirection\nimport './style/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSignup = async e => {\n    e.preventDefault();\n\n    // Validate form data\n    if (!username || !email || !password || !confirmPassword) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    if (!email.includes('@')) {\n      setErrorMessage('Invalid email format');\n      return;\n    }\n\n    // You can add more specific validations for username, email, and password here\n    // For example, you can use regular expressions for email validation\n\n    try {\n      // Make a POST request to the backend API for user registration\n      const response = await fetch('http://localhost/api/register.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n          confirmPassword\n        })\n      });\n      const responseData = await response.json();\n      if (!response.ok) {\n        console.error('Error during registration:', responseData.message);\n        setErrorMessage(responseData.message || 'An error occurred during registration');\n      } else {\n        // Registration successful\n        console.log('User registered successfully');\n        setSuccessMessage('Registration successful!');\n\n        // Uncomment the following line once you have configured your routes\n        redirect('/login');\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n      setErrorMessage('An error occurred during registration');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Get On Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"text\",\n            placeholder: \"\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"text\",\n            placeholder: \"\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"password\",\n            placeholder: \"\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"password\",\n            placeholder: \"\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSignup,\n            className: \"login-button\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sign-up-link\",\n          children: [\"Already Member? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Login\",\n            children: \"Login Instead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"u9kw8VBDjRUoaekDpOHNqHiUgbo=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","redirect","useHistory","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSignup","e","preventDefault","includes","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","console","error","message","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/noliktava/src/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, redirect, useHistory } from 'react-router-dom'; // Import useHistory for redirection\nimport './style/Login.css';\n\nfunction Signup() {\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n\n    // Validate form data\n    if (!username || !email || !password || !confirmPassword) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    if (!email.includes('@')) {\n      setErrorMessage('Invalid email format');\n      return;\n    }\n  \n    // You can add more specific validations for username, email, and password here\n    // For example, you can use regular expressions for email validation\n\n    try {\n      // Make a POST request to the backend API for user registration\n      const response = await fetch('http://localhost/api/register.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password, confirmPassword }),\n      });\n\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        console.error('Error during registration:', responseData.message);\n        setErrorMessage(responseData.message || 'An error occurred during registration');\n      } else {\n        // Registration successful\n        console.log('User registered successfully');\n        setSuccessMessage('Registration successful!');\n\n        // Uncomment the following line once you have configured your routes\n        redirect('/login');\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n      setErrorMessage('An error occurred during registration');\n    }\n  };\n\n  return (\n    <div className=\"login-main\">\n      <div className=\"login-container\">\n        <div className='login-wrapper'>\n          <h2>Get On Board</h2>\n\n          <div className='input-group'>\n            <label>Username</label>\n            <input\n              className='login-input'\n              type='text'\n              placeholder=''\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n\n          <div className='input-group'>\n            <label>Email</label>\n            <input\n              className='login-input'\n              type='text'\n              placeholder=''\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className='input-group'>\n            <label>Password</label>\n            <input\n              className='login-input'\n              type='password'\n              placeholder=''\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <div className='input-group'>\n            <label>Confirm Password</label>\n            <input\n              className='login-input'\n              type='password'\n              placeholder=''\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </div>\n\n          <div className='login-button-container'>\n            <button onClick={handleSignup} className='login-button'>\n              Sign Up\n            </button>\n          </div>\n\n          <p className='error-message'>{errorMessage}</p>\n          <p className='success-message'>{successMessage}</p>\n\n          <p className='sign-up-link'>\n            Already Member? <Link to=\"/Login\">Login Instead</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAC/D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMoB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACd,QAAQ,IAAI,CAACE,KAAK,IAAI,CAACE,QAAQ,IAAI,CAACE,eAAe,EAAE;MACxDG,eAAe,CAAC,yBAAyB,CAAC;MAC1C;IACF;IAEA,IAAIL,QAAQ,KAAKE,eAAe,EAAE;MAChCG,eAAe,CAAC,wBAAwB,CAAC;MACzC;IACF;IACA,IAAI,CAACP,KAAK,CAACa,QAAQ,CAAC,GAAG,CAAC,EAAE;MACxBN,eAAe,CAAC,sBAAsB,CAAC;MACvC;IACF;;IAEA;IACA;;IAEA,IAAI;MACF;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtB,QAAQ;UAAEE,KAAK;UAAEE,QAAQ;UAAEE;QAAgB,CAAC;MACrE,CAAC,CAAC;MAEF,MAAMiB,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAE1C,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEJ,YAAY,CAACK,OAAO,CAAC;QACjEnB,eAAe,CAACc,YAAY,CAACK,OAAO,IAAI,uCAAuC,CAAC;MAClF,CAAC,MAAM;QACL;QACAF,OAAO,CAACG,GAAG,CAAC,8BAA8B,CAAC;QAC3ClB,iBAAiB,CAAC,0BAA0B,CAAC;;QAE7C;QACAjB,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDlB,eAAe,CAAC,uCAAuC,CAAC;IAC1D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKiC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBlC,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BlC,OAAA;QAAKiC,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BlC,OAAA;UAAAkC,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAErBtC,OAAA;UAAKiC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlC,OAAA;YAAAkC,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvBtC,OAAA;YACEiC,SAAS,EAAC,aAAa;YACvBM,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,EAAE;YACdC,KAAK,EAAEtC,QAAS;YAChBuC,QAAQ,EAAG1B,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAAC2B,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlC,OAAA;YAAAkC,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBtC,OAAA;YACEiC,SAAS,EAAC,aAAa;YACvBM,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,EAAE;YACdC,KAAK,EAAEpC,KAAM;YACbqC,QAAQ,EAAG1B,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAAC2B,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlC,OAAA;YAAAkC,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvBtC,OAAA;YACEiC,SAAS,EAAC,aAAa;YACvBM,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,EAAE;YACdC,KAAK,EAAElC,QAAS;YAChBmC,QAAQ,EAAG1B,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAAC2B,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlC,OAAA;YAAAkC,QAAA,EAAO;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/BtC,OAAA;YACEiC,SAAS,EAAC,aAAa;YACvBM,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,EAAE;YACdC,KAAK,EAAEhC,eAAgB;YACvBiC,QAAQ,EAAG1B,CAAC,IAAKN,kBAAkB,CAACM,CAAC,CAAC2B,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,wBAAwB;UAAAC,QAAA,eACrClC,OAAA;YAAQ4C,OAAO,EAAE7B,YAAa;YAACkB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAExD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENtC,OAAA;UAAGiC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvB;QAAY;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CtC,OAAA;UAAGiC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAErB;QAAc;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEnDtC,OAAA;UAAGiC,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,kBACV,eAAAlC,OAAA,CAACJ,IAAI;YAACiD,EAAE,EAAC,QAAQ;YAAAX,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpC,EAAA,CA7HQD,MAAM;AAAA6C,EAAA,GAAN7C,MAAM;AA+Hf,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}