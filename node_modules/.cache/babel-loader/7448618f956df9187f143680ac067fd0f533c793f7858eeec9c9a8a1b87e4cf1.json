{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserDataState] = useState({\n    userId: null,\n    username: null,\n    role: null\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeContext = async () => {\n      try {\n        // Check local storage for user data\n        const storedUserId = localStorage.getItem('userId');\n        const storedUsername = localStorage.getItem('username');\n        const storedUserRole = localStorage.getItem('role');\n\n        // Update context based on local storage\n        if (storedUserId && storedUsername && storedUserRole) {\n          setUserDataState({\n            userId: storedUserId,\n            username: storedUsername,\n            role: storedUserRole\n          });\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error accessing local storage:', error);\n        // Handle the error (e.g., reset local storage, show an error message)\n      } finally {\n        // Set loading to false once the context is updated or an error occurs\n        setLoading(false);\n      }\n    };\n\n    // Call the asynchronous initialization function\n    initializeContext();\n  }, [setIsAuthenticated, setUserDataState]);\n  const setAuthStatus = status => {\n    setIsAuthenticated(status);\n  };\n  const setUserData = data => {\n    // Update state and local storage when user data changes\n    setUserDataState(data);\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('username', data.username);\n    localStorage.setItem('role', data.role);\n  };\n\n  // Include setUserData and logout in the context value\n  const contextValue = {\n    isAuthenticated,\n    setAuthStatus,\n    // Add this line\n    userData,\n    setUserData,\n    // Add this line\n    logout: () => {\n      setIsAuthenticated(false);\n      setUserDataState({\n        userId: null,\n        username: null,\n        role: null\n      });\n      localStorage.removeItem('userId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Ib5kl5iTZ6aOtODBwTEKr2QaqA4=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","isAuthenticated","setIsAuthenticated","userData","setUserDataState","userId","username","role","loading","setLoading","initializeContext","storedUserId","localStorage","getItem","storedUsername","storedUserRole","error","console","setAuthStatus","status","setUserData","data","setItem","contextValue","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserDataState] = useState({\n    userId: null,\n    username: null,\n    role: null,\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeContext = async () => {\n      try {\n        // Check local storage for user data\n        const storedUserId = localStorage.getItem('userId');\n        const storedUsername = localStorage.getItem('username');\n        const storedUserRole = localStorage.getItem('role');\n  \n        // Update context based on local storage\n        if (storedUserId && storedUsername && storedUserRole) {\n          setUserDataState({\n            userId: storedUserId,\n            username: storedUsername,\n            role: storedUserRole,\n          });\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error accessing local storage:', error);\n        // Handle the error (e.g., reset local storage, show an error message)\n      } finally {\n        // Set loading to false once the context is updated or an error occurs\n        setLoading(false);\n      }\n    };\n  \n    // Call the asynchronous initialization function\n    initializeContext();\n  }, [setIsAuthenticated, setUserDataState]);\n  \n\n  const setAuthStatus = (status) => {\n    setIsAuthenticated(status);\n  };\n\n  const setUserData = (data) => {\n    // Update state and local storage when user data changes\n    setUserDataState(data);\n    localStorage.setItem('userId', data.userId);\n    localStorage.setItem('username', data.username);\n    localStorage.setItem('role', data.role);\n  };\n\n  // Include setUserData and logout in the context value\n  const contextValue = {\n    isAuthenticated,\n    setAuthStatus,  // Add this line\n    userData,\n    setUserData,   // Add this line\n    logout: () => {\n      setIsAuthenticated(false);\n      setUserDataState({\n        userId: null,\n        username: null,\n        role: null,\n      });\n      localStorage.removeItem('userId');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n    },\n  };\n\n  return (\n    <UserContext.Provider value={contextValue}>\n      {!loading ? children : <p>Loading...</p>}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}