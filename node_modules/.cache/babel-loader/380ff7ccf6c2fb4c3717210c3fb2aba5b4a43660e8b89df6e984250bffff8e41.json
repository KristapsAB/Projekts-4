{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js\",\n  _s = $RefreshSig$();\n// UserContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [authStatus, setAuthStatus] = useState(false);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    // Check if user is authenticated based on your logic\n    // For example, you can check if there is a token in localStorage\n    const isAuthenticated = localStorage.getItem('token') !== null;\n    setAuthStatus(isAuthenticated);\n\n    // If authenticated, fetch user data from the server and update context\n    if (isAuthenticated) {\n      // Fetch user data from the server (replace with your actual fetch logic)\n      fetch('http://localhost:8888/api/getUserData.php', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => response.json()).then(data => {\n        // Set user data in context\n        setUserData(data);\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }, []);\n  const logout = () => {\n    // Clear user data and token on logout\n    setAuthStatus(false);\n    setUserData(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      authStatus,\n      setAuthStatus,\n      userData,\n      setUserData,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"QF3vNW4GSrRMtVvW67uJsmdbztc=\");\n_c = UserProvider;\nexport { UserContext, UserProvider };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","authStatus","setAuthStatus","userData","setUserData","isAuthenticated","localStorage","getItem","fetch","headers","Authorization","then","response","json","data","catch","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/UserContext.js"],"sourcesContent":["// UserContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [authStatus, setAuthStatus] = useState(false);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    // Check if user is authenticated based on your logic\n    // For example, you can check if there is a token in localStorage\n    const isAuthenticated = localStorage.getItem('token') !== null;\n\n    setAuthStatus(isAuthenticated);\n\n    // If authenticated, fetch user data from the server and update context\n    if (isAuthenticated) {\n      // Fetch user data from the server (replace with your actual fetch logic)\n      fetch('http://localhost:8888/api/getUserData.php', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          // Set user data in context\n          setUserData(data);\n        })\n        .catch((error) => {\n          console.error('Error fetching user data:', error);\n        });\n    }\n  }, []);\n\n  const logout = () => {\n    // Clear user data and token on logout\n    setAuthStatus(false);\n    setUserData(null);\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <UserContext.Provider value={{ authStatus, setAuthStatus, userData, setUserData, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMW,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;IAE9DL,aAAa,CAACG,eAAe,CAAC;;IAE9B;IACA,IAAIA,eAAe,EAAE;MACnB;MACAG,KAAK,CAAC,2CAA2C,EAAE;QACjDC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACzD;MACF,CAAC,CAAC,CACCI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd;QACAV,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAhB,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;IACjBE,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,UAAU;MAAEC,aAAa;MAAEC,QAAQ;MAAEC,WAAW;MAAEc;IAAO,CAAE;IAAAnB,QAAA,EACvFA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CA1CIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA4ClB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}