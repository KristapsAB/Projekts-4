{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/ReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StarRating from './StarRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const [events, setEvents] = useState([]); // State to hold events\n  const [review, setReview] = useState({\n    rating: 0\n  });\n  useEffect(() => {\n    // Fetch events here\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://localhost:8888/api/getEvents'); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Error fetching events');\n        }\n        const data = await response.json();\n        setEvents(data); // Update the events state with the fetched data\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const handleLeaveReview = async eventId => {\n    // Implement your review submission logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2teksti\",\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-item-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event Name: \", event.event_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", event.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n        value: review.rating,\n        onChange: rating => setReview({\n          ...review,\n          rating\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLeaveReview(event.id),\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewPage, \"uIZV1IAf3WtL89NmlJhyDhL8SdI=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","StarRating","jsxDEV","_jsxDEV","ReviewPage","_s","events","setEvents","review","setReview","rating","fetchEvents","response","fetch","ok","Error","data","json","error","console","handleLeaveReview","eventId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","event","event_name","location","value","onChange","onClick","id","_c","$RefreshReg$"],"sources":["/Users/kirillkicenko/Desktop/EVENT-PAGE/noliktava/src/ReviewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StarRating from './StarRating';\n\nconst ReviewPage = () => {\n  const [events, setEvents] = useState([]); // State to hold events\n  const [review, setReview] = useState({ rating: 0 });\n\n  useEffect(() => {\n    // Fetch events here\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://localhost:8888/api/getEvents'); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Error fetching events');\n        }\n        const data = await response.json();\n        setEvents(data); // Update the events state with the fetched data\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n\n    fetchEvents();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const handleLeaveReview = async (eventId) => {\n    // Implement your review submission logic\n  };\n\n  return (\n    <div>\n      <h2 className=\"h2teksti\">Leave a Review</h2>\n      {/* Render the events or items that can be reviewed */}\n      {events.map((event) => (\n        <div key={event.id} className=\"review-item-container\">\n          <p>Event Name: {event.event_name}</p>\n          <p>Location: {event.location}</p>\n          {/* Add other relevant details */}\n          <StarRating\n            value={review.rating}\n            onChange={(rating) => setReview({ ...review, rating })}\n          />\n          <button onClick={() => handleLeaveReview(event.id)}>Submit Review</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ReviewPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IAAEW,MAAM,EAAE;EAAE,CAAC,CAAC;EAEnDV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;QACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,SAAS,CAACS,IAAI,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMS,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3C;EAAA,CACD;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAIoB,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE3CrB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB1B,OAAA;MAAoBoB,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBACnDnB,OAAA;QAAAmB,QAAA,GAAG,cAAY,EAACO,KAAK,CAACC,UAAU;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCxB,OAAA;QAAAmB,QAAA,GAAG,YAAU,EAACO,KAAK,CAACE,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjCxB,OAAA,CAACF,UAAU;QACT+B,KAAK,EAAExB,MAAM,CAACE,MAAO;QACrBuB,QAAQ,EAAGvB,MAAM,IAAKD,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEE;QAAO,CAAC;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACFxB,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACS,KAAK,CAACM,EAAE,CAAE;QAAAb,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARlEE,KAAK,CAACM,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5CID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}