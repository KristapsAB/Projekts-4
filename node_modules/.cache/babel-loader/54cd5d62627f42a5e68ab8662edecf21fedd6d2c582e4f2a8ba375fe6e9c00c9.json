{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krist\\\\OneDrive\\\\Desktop\\\\noliktava\\\\src\\\\AvgRating.jsx\",\n  _s = $RefreshSig$();\n// RatingPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingPage = () => {\n  _s();\n  const [eventId, setEventId] = useState( /* Set your initial event ID here, e.g., initialEventId */);\n  const [averageRating, setAverageRating] = useState(0);\n  const [comments, setComments] = useState([]);\n\n  // You can handle the event ID change based on your application logic\n  const handleEventIdChange = newEventId => {\n    setEventId(newEventId);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch average rating\n        const ratingResponse = await fetch(`http://localhost/api/getAverageEventRating.php?eventId=${eventId}`);\n        if (!ratingResponse.ok) {\n          console.error(`HTTP error! Status: ${ratingResponse.status}`);\n          throw new Error('Error fetching average rating.');\n        }\n        const ratingData = await ratingResponse.json();\n        setAverageRating(ratingData.averageRating);\n\n        // Fetch comments\n        const commentsResponse = await fetch(`http://localhost/api/getEventComments.php?eventId=${eventId}`);\n        if (!commentsResponse.ok) {\n          console.error(`HTTP error! Status: ${commentsResponse.status}`);\n          throw new Error('Error fetching comments.');\n        }\n        const commentsData = await commentsResponse.json();\n        setComments(commentsData.comments);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [eventId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Average Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Average Rating: \", averageRating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Event ID\",\n      value: eventId,\n      onChange: e => handleEventIdChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingPage, \"8u5Sxg9NyjCDnlLygQtR3gPbt3M=\");\n_c = RatingPage;\nexport default RatingPage;\nvar _c;\n$RefreshReg$(_c, \"RatingPage\");","map":{"version":3,"names":["React","useState","useEffect","Nav","jsxDEV","_jsxDEV","RatingPage","_s","eventId","setEventId","averageRating","setAverageRating","comments","setComments","handleEventIdChange","newEventId","fetchData","ratingResponse","fetch","ok","console","error","status","Error","ratingData","json","commentsResponse","commentsData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/krist/OneDrive/Desktop/noliktava/src/AvgRating.jsx"],"sourcesContent":["// RatingPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport Nav from './Nav';\r\n\r\nconst RatingPage = () => {\r\n  const [eventId, setEventId] = useState(/* Set your initial event ID here, e.g., initialEventId */);\r\n  const [averageRating, setAverageRating] = useState(0);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // You can handle the event ID change based on your application logic\r\n  const handleEventIdChange = (newEventId) => {\r\n    setEventId(newEventId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch average rating\r\n        const ratingResponse = await fetch(`http://localhost/api/getAverageEventRating.php?eventId=${eventId}`);\r\n        if (!ratingResponse.ok) {\r\n          console.error(`HTTP error! Status: ${ratingResponse.status}`);\r\n          throw new Error('Error fetching average rating.');\r\n        }\r\n\r\n        const ratingData = await ratingResponse.json();\r\n        setAverageRating(ratingData.averageRating);\r\n\r\n        // Fetch comments\r\n        const commentsResponse = await fetch(`http://localhost/api/getEventComments.php?eventId=${eventId}`);\r\n        if (!commentsResponse.ok) {\r\n          console.error(`HTTP error! Status: ${commentsResponse.status}`);\r\n          throw new Error('Error fetching comments.');\r\n        }\r\n\r\n        const commentsData = await commentsResponse.json();\r\n        setComments(commentsData.comments);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [eventId]);\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <h2>Average Rating</h2>\r\n      \r\n      {/* Render average rating */}\r\n      <h3>Average Rating: {averageRating}</h3>\r\n      \r\n      {/* Render comments */}\r\n      <h4>Comments:</h4>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>{comment.comment}</li>\r\n        ))}\r\n      </ul>\r\n      \r\n      {/* You can have a way to change the eventId, for example, a dropdown or input */}\r\n      {/* Example: */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Event ID\"\r\n        value={eventId}\r\n        onChange={(e) => handleEventIdChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}